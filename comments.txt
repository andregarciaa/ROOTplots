#L1-3:   Don't put any comment BEFORE the SHEBANG!! Otherwise you could face
         problems when loading or running it. ALWAYS SHEBANG at first line.

#        Comments come after, in a python script or module (Q1: what's a 
         script and a module, what is the difference between them?), the usual
         structure is to put there a docstring with a short description of 
         the program, who did it, etc. You should read this answer 
         https://stackoverflow.com/questions/1523427/what-is-the-common-header-format-of-python-files
         and if you have time, read this, old but still valid, guide: 
         https://stackoverflow.com/questions/1523427/what-is-the-common-header-format-of-python-files

#        Get used to break your lines at about 79 columns. This is not an 
         strict rule to follow, but improves a lot readability. But always 
         avoid very long lines without break them. (Q2: How can you break 
         a line while you are writing a string variable larger than 80 char.: 
         "somethingverylongblahblahblabh.."?)

#        If you write down the goals of the program, you will identify clearest
         how to write the program code.

#L50-72: (Q3: when is it executed that lines? 
            a. when you run from bash terminal "python root_plots.py"
            b. when you run from python interpreter "import root_plots"
          Why? )
         
#L12-33: read_path function
         Take a look at the module "glob", or the module "os.path", with one 
         of them you can use check if the file exists at the given path just
         with one line (Q4: Show how to check in one line of code how to check
         if a file exists in a given path using 
                                                a. glob module
                                                b. os.path module)
         L20-21: Very complicated, non-optimal way of checking if exist an 
         element in a string, CHECK the available str functions (Q5: Use a
         str method to check whether or not the substring "myfriend" is in 
         the string "dontlooseyourmind_my_friend")

         L23: GOOD; as far as you can, always control errors and provide error 
         messages

         L28,L30: That's not enterely right, if you use the whole substring 
         after, you will have the info you are looking at, but more garbage.
         (Q6: In one line, extract the substring 'croack' from the string 
         "the_frog_is_saying_croak_but_no_one_is_listening". Trick, check the
         available functions of a python str)


#L38-47  plot_branch
         You cannot use "root -l path_with_root_file" inside a python script
         (Q7: Why?)
         It is missing a lot of code between the check of the tree and the 
         save to pdf
         1. You have to obtain the proper time window to cut on
         2. You have to apply the time window to create the charge distribution
            plot
         3. You have to fit a Landau*Gaus to the charge distribution, monitoring
            the fitting proceed fine
         4. You have to obtain the relevant parameters from the fit (MPV, gaus 
         noise)
         5. You have to evaluate errors

         This is only for 1 charge plot, but probably will be needed to accumulate
         statistics for the same sensors, voltages or even a plot MPV vs. voltage..





